TASK-14 (Part 2)
LOGGING AND MOCKING

PARAMETERS:
- httpHeader = authorization: Basic
- httpResponseCode = 114
- httpResponseDelay = 3731

(2) Мокінг
(2.1) За прикладом з лекції (HJAQALesson23) створити тестовий клас, що використовує мок-сервіс за допомогою WireMock.
(2.2) Використати метод urlEqualTo() для матчингу URL, що викликається. URL вигадати самостійно.
(2.3) Матчити хедер HTTP реквесту згідно з завданням, поле httpHeader.
(2.4) Повертати HTTP код та робити затримку відповіді згідно з завданням: поля httpResponseCode та httpResponseDelay,
      відповідньо.
(2.5) Асертити код респонса та довжину затримки.

-----------------------------------------------------------------------------------------------------------------------

(2) МОКІНГ
Створив новий проект AQA-Lesson_Mocking

(2.0) Створив pom.xml та testng.xml файл:
      - (a) Створив новий pom.xml файл (Maven додався автоматично).
      - (b) Наповнив pom.xml контентом, додав залежностей: OkHTTP, TestNG, wiremock.
      - (c) Змінив структуру проекту додавши діректорії "main" та "test", і переніс існуючи пакети та Main класс до "main".
      - (d) Створив новий testng.xml файл.

(2.1) За прикладом з лекції (HJAQALesson23) створив тестовий клас, що використовує мок-сервіс за допомогою WireMock.
      - (a) Створив тестовий клас "AnalyticsTest"
      - (b) Тестовий клас "AnalyticsTest": заімплементував новий OkHttpClient
      - (c) Тестовий клас "AnalyticsTest": заімплементував новий WireMockServer
      - (d) Тестовий клас "AnalyticsTest": створив @BeforeClass та @AfterClass анотації.
      - (e) Аннотація @BeforeClass: заімплементував старт wireMockServer;
      - (f) Аннотація @BeforeClass: заімплементував конфігурацію за допомогою сінглтону використовуючи номер порта.
      - (g) Аннотація @AfterClass: заімплементував зупинку wireMockServer.

(2.2) Використати метод urlEqualTo() для матчингу URL, що викликається. URL вигадати самостійно.
      - (a) Аннотація @BeforeClass: законфігорував поведінку стаббінгу для реквесту:
            - HTTP-method = GET;
            - URL = /analytics (full URI вигадав: http://localhost:9098/analytics).
      - (b) Аннотація @BeforeClass: законфігорував поведінку стаббінгу для респонсу:
            наразі матчингу реквеста WireMock поверне об'єкт.
      - (c) Аннотація @Test: заімплементував метод "checkMyUrl()" який створює новий HTTP-реквест з:
            - URL = http://localhost:
            - port = 9098
            - endpoint = /analytics
      - (d) Аннотація @Test: виконав реквест у блоці TRY;
      - (e) Аннотація @Test: у Асерті перевірив, що актуальний URL матчиться із заданним URL.

(2.3) Матчити хедер HTTP реквесту згідно з завданням, поле httpHeader = authorization: Basic
      - (a) Аннотація @BeforeClass: у Стаббері встановив HTTP Хедер для реквесту ("authorization", "Basic") ;
      - (b) Аннотація @Test: у Асерті перевірив, що актуальний Header матчиться із заданним Header'ом.

(2.4) Повертати HTTP код та робити затримку відповіді згідно з завданням:
      * httpResponseCode = 114 -> suggested to use 2xx -> httpResponseCode = 214
      * httpResponseDelay = 3731
      - (a) Test Class AnalyticsTest: implements 2 x int vars "code" and "delay"
      - (b) Аннотація @BeforeClass: у Стаббері встановив HTTP Статус Код для реквесту (214);
      - (c) Аннотація @BeforeClass:у Стаббері встановив HTTP Фіксовану Затримку для реквесту (3731).

(2.5) Асертити код респонса та довжину затримки.
      - (a) Аннотація @Test: у Асерті перевірив, що актуальний Status Code матчиться із заданним Status Code'ом.
      - (b) Аннотація @Test перед блоком TRY: використовуя java.time замірив момент часу перед виконанням реквесту.
      - (c) Аннотація @Test у блоці TRY: використовуя java.time замірив момент часу після виконання реквесту.
      - (d) Аннотація @Test у блоці TRY: за різницею моментів порахував актуальну затримку у часі.
      - (e) Аннотація @Test: у Асерті перевірив, що актуальна затримка не нижче заданої.


(3) ADDITION CHANGES FOR PR

(3.1) Створив нову гілку "mocking".
(3.2) Закомітив та запушив на ГітХаб.
(3.3) Створив PR.
